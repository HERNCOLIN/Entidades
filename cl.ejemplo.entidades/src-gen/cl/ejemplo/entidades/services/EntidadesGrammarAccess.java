/*
 * generated by Xtext 2.21.0
 */
package cl.ejemplo.entidades.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class EntidadesGrammarAccess extends AbstractGrammarElementFinder {
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "cl.ejemplo.entidades.Entidades.Model");
		private final Assignment cEntidadesAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cEntidadesEntidadParserRuleCall_0 = (RuleCall)cEntidadesAssignment.eContents().get(0);
		
		//Model:
		//	entidades+=Entidad*;
		@Override public ParserRule getRule() { return rule; }
		
		//entidades+=Entidad*
		public Assignment getEntidadesAssignment() { return cEntidadesAssignment; }
		
		//Entidad
		public RuleCall getEntidadesEntidadParserRuleCall_0() { return cEntidadesEntidadParserRuleCall_0; }
	}
	public class EntidadElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "cl.ejemplo.entidades.Entidades.Entidad");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEntidadKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cExtendsKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cSuperTipoAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cSuperTipoEntidadCrossReference_2_1_0 = (CrossReference)cSuperTipoAssignment_2_1.eContents().get(0);
		private final RuleCall cSuperTipoEntidadIDTerminalRuleCall_2_1_0_1 = (RuleCall)cSuperTipoEntidadCrossReference_2_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cAtributosAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cAtributosAtributoParserRuleCall_4_0 = (RuleCall)cAtributosAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Entidad:
		//	'entidad' name=ID ('extends' superTipo=[Entidad])? '{'
		//	atributos+=Atributo*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'entidad' name=ID ('extends' superTipo=[Entidad])? '{' atributos+=Atributo* '}'
		public Group getGroup() { return cGroup; }
		
		//'entidad'
		public Keyword getEntidadKeyword_0() { return cEntidadKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//('extends' superTipo=[Entidad])?
		public Group getGroup_2() { return cGroup_2; }
		
		//'extends'
		public Keyword getExtendsKeyword_2_0() { return cExtendsKeyword_2_0; }
		
		//superTipo=[Entidad]
		public Assignment getSuperTipoAssignment_2_1() { return cSuperTipoAssignment_2_1; }
		
		//[Entidad]
		public CrossReference getSuperTipoEntidadCrossReference_2_1_0() { return cSuperTipoEntidadCrossReference_2_1_0; }
		
		//ID
		public RuleCall getSuperTipoEntidadIDTerminalRuleCall_2_1_0_1() { return cSuperTipoEntidadIDTerminalRuleCall_2_1_0_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//atributos+=Atributo*
		public Assignment getAtributosAssignment_4() { return cAtributosAssignment_4; }
		
		//Atributo
		public RuleCall getAtributosAtributoParserRuleCall_4_0() { return cAtributosAtributoParserRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class AtributoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "cl.ejemplo.entidades.Entidades.Atributo");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTipoAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTipoTipoAtributoParserRuleCall_0_0 = (RuleCall)cTipoAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//Atributo:
		//	tipo=TipoAtributo name=ID ';';
		@Override public ParserRule getRule() { return rule; }
		
		//tipo=TipoAtributo name=ID ';'
		public Group getGroup() { return cGroup; }
		
		//tipo=TipoAtributo
		public Assignment getTipoAssignment_0() { return cTipoAssignment_0; }
		
		//TipoAtributo
		public RuleCall getTipoTipoAtributoParserRuleCall_0_0() { return cTipoTipoAtributoParserRuleCall_0_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}
	public class TipoAtributoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "cl.ejemplo.entidades.Entidades.TipoAtributo");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cEntidadAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cEntidadEntidadCrossReference_0_0 = (CrossReference)cEntidadAssignment_0.eContents().get(0);
		private final RuleCall cEntidadEntidadIDTerminalRuleCall_0_0_1 = (RuleCall)cEntidadEntidadCrossReference_0_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cArrayAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final Keyword cArrayLeftSquareBracketKeyword_1_0_0 = (Keyword)cArrayAssignment_1_0.eContents().get(0);
		private final Assignment cLengthAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cLengthINTTerminalRuleCall_1_1_0 = (RuleCall)cLengthAssignment_1_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//TipoAtributo:
		//	entidad=[Entidad] (array?='[' length=INT? ']')?;
		@Override public ParserRule getRule() { return rule; }
		
		//entidad=[Entidad] (array?='[' length=INT? ']')?
		public Group getGroup() { return cGroup; }
		
		//entidad=[Entidad]
		public Assignment getEntidadAssignment_0() { return cEntidadAssignment_0; }
		
		//[Entidad]
		public CrossReference getEntidadEntidadCrossReference_0_0() { return cEntidadEntidadCrossReference_0_0; }
		
		//ID
		public RuleCall getEntidadEntidadIDTerminalRuleCall_0_0_1() { return cEntidadEntidadIDTerminalRuleCall_0_0_1; }
		
		//(array?='[' length=INT? ']')?
		public Group getGroup_1() { return cGroup_1; }
		
		//array?='['
		public Assignment getArrayAssignment_1_0() { return cArrayAssignment_1_0; }
		
		//'['
		public Keyword getArrayLeftSquareBracketKeyword_1_0_0() { return cArrayLeftSquareBracketKeyword_1_0_0; }
		
		//length=INT?
		public Assignment getLengthAssignment_1_1() { return cLengthAssignment_1_1; }
		
		//INT
		public RuleCall getLengthINTTerminalRuleCall_1_1_0() { return cLengthINTTerminalRuleCall_1_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_1_2() { return cRightSquareBracketKeyword_1_2; }
	}
	
	
	private final ModelElements pModel;
	private final EntidadElements pEntidad;
	private final AtributoElements pAtributo;
	private final TipoAtributoElements pTipoAtributo;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public EntidadesGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pModel = new ModelElements();
		this.pEntidad = new EntidadElements();
		this.pAtributo = new AtributoElements();
		this.pTipoAtributo = new TipoAtributoElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("cl.ejemplo.entidades.Entidades".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Model:
	//	entidades+=Entidad*;
	public ModelElements getModelAccess() {
		return pModel;
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}
	
	//Entidad:
	//	'entidad' name=ID ('extends' superTipo=[Entidad])? '{'
	//	atributos+=Atributo*
	//	'}';
	public EntidadElements getEntidadAccess() {
		return pEntidad;
	}
	
	public ParserRule getEntidadRule() {
		return getEntidadAccess().getRule();
	}
	
	//Atributo:
	//	tipo=TipoAtributo name=ID ';';
	public AtributoElements getAtributoAccess() {
		return pAtributo;
	}
	
	public ParserRule getAtributoRule() {
		return getAtributoAccess().getRule();
	}
	
	//TipoAtributo:
	//	entidad=[Entidad] (array?='[' length=INT? ']')?;
	public TipoAtributoElements getTipoAtributoAccess() {
		return pTipoAtributo;
	}
	
	public ParserRule getTipoAtributoRule() {
		return getTipoAtributoAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
